import { exec } from './base.js';


const testinput = `498,4 -> 498,6 -> 496,6
503,4 -> 502,4 -> 502,9 -> 494,9`;

const rawinput = `500,30 -> 504,30
503,28 -> 507,28
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
496,97 -> 496,99 -> 488,99 -> 488,103 -> 508,103 -> 508,99 -> 502,99 -> 502,97
537,66 -> 541,66
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
479,85 -> 479,87 -> 473,87 -> 473,94 -> 486,94 -> 486,87 -> 483,87 -> 483,85
540,64 -> 544,64
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
528,68 -> 532,68
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
537,62 -> 541,62
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
500,34 -> 504,34
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
482,82 -> 498,82 -> 498,81
486,115 -> 486,117 -> 484,117 -> 484,123 -> 494,123 -> 494,117 -> 490,117 -> 490,115
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
546,64 -> 550,64
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
530,50 -> 530,53 -> 523,53 -> 523,57 -> 541,57 -> 541,53 -> 534,53 -> 534,50
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
506,34 -> 510,34
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
503,108 -> 508,108
512,34 -> 516,34
561,77 -> 561,78 -> 578,78 -> 578,77
515,32 -> 519,32
543,62 -> 547,62
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
534,64 -> 538,64
514,110 -> 519,110
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
543,66 -> 547,66
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
503,32 -> 507,32
504,112 -> 509,112
561,77 -> 561,78 -> 578,78 -> 578,77
479,85 -> 479,87 -> 473,87 -> 473,94 -> 486,94 -> 486,87 -> 483,87 -> 483,85
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
512,30 -> 516,30
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
496,97 -> 496,99 -> 488,99 -> 488,103 -> 508,103 -> 508,99 -> 502,99 -> 502,97
500,110 -> 505,110
488,161 -> 493,161
549,66 -> 553,66
486,115 -> 486,117 -> 484,117 -> 484,123 -> 494,123 -> 494,117 -> 490,117 -> 490,115
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
494,34 -> 498,34
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
530,50 -> 530,53 -> 523,53 -> 523,57 -> 541,57 -> 541,53 -> 534,53 -> 534,50
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
546,68 -> 550,68
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
511,112 -> 516,112
547,73 -> 547,74 -> 567,74
496,97 -> 496,99 -> 488,99 -> 488,103 -> 508,103 -> 508,99 -> 502,99 -> 502,97
496,97 -> 496,99 -> 488,99 -> 488,103 -> 508,103 -> 508,99 -> 502,99 -> 502,97
518,34 -> 522,34
486,115 -> 486,117 -> 484,117 -> 484,123 -> 494,123 -> 494,117 -> 490,117 -> 490,115
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
482,140 -> 482,141 -> 489,141 -> 489,140
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
496,97 -> 496,99 -> 488,99 -> 488,103 -> 508,103 -> 508,99 -> 502,99 -> 502,97
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
479,85 -> 479,87 -> 473,87 -> 473,94 -> 486,94 -> 486,87 -> 483,87 -> 483,85
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
496,97 -> 496,99 -> 488,99 -> 488,103 -> 508,103 -> 508,99 -> 502,99 -> 502,97
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
496,97 -> 496,99 -> 488,99 -> 488,103 -> 508,103 -> 508,99 -> 502,99 -> 502,97
552,68 -> 556,68
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
506,26 -> 510,26
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
479,85 -> 479,87 -> 473,87 -> 473,94 -> 486,94 -> 486,87 -> 483,87 -> 483,85
479,85 -> 479,87 -> 473,87 -> 473,94 -> 486,94 -> 486,87 -> 483,87 -> 483,85
494,157 -> 499,157
486,115 -> 486,117 -> 484,117 -> 484,123 -> 494,123 -> 494,117 -> 490,117 -> 490,115
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
530,50 -> 530,53 -> 523,53 -> 523,57 -> 541,57 -> 541,53 -> 534,53 -> 534,50
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
486,115 -> 486,117 -> 484,117 -> 484,123 -> 494,123 -> 494,117 -> 490,117 -> 490,115
498,159 -> 503,159
510,108 -> 515,108
530,50 -> 530,53 -> 523,53 -> 523,57 -> 541,57 -> 541,53 -> 534,53 -> 534,50
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
479,85 -> 479,87 -> 473,87 -> 473,94 -> 486,94 -> 486,87 -> 483,87 -> 483,85
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
534,68 -> 538,68
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
486,115 -> 486,117 -> 484,117 -> 484,123 -> 494,123 -> 494,117 -> 490,117 -> 490,115
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
482,140 -> 482,141 -> 489,141 -> 489,140
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
497,112 -> 502,112
509,28 -> 513,28
530,50 -> 530,53 -> 523,53 -> 523,57 -> 541,57 -> 541,53 -> 534,53 -> 534,50
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
547,73 -> 547,74 -> 567,74
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
540,60 -> 544,60
482,82 -> 498,82 -> 498,81
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
502,161 -> 507,161
477,136 -> 477,133 -> 477,136 -> 479,136 -> 479,135 -> 479,136 -> 481,136 -> 481,127 -> 481,136 -> 483,136 -> 483,131 -> 483,136 -> 485,136 -> 485,129 -> 485,136 -> 487,136 -> 487,135 -> 487,136
506,30 -> 510,30
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
531,66 -> 535,66
491,159 -> 496,159
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
518,112 -> 523,112
561,77 -> 561,78 -> 578,78 -> 578,77
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
486,115 -> 486,117 -> 484,117 -> 484,123 -> 494,123 -> 494,117 -> 490,117 -> 490,115
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47
530,50 -> 530,53 -> 523,53 -> 523,57 -> 541,57 -> 541,53 -> 534,53 -> 534,50
497,32 -> 501,32
540,68 -> 544,68
530,50 -> 530,53 -> 523,53 -> 523,57 -> 541,57 -> 541,53 -> 534,53 -> 534,50
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
482,154 -> 482,152 -> 482,154 -> 484,154 -> 484,149 -> 484,154 -> 486,154 -> 486,146 -> 486,154 -> 488,154 -> 488,153 -> 488,154 -> 490,154 -> 490,144 -> 490,154 -> 492,154 -> 492,147 -> 492,154 -> 494,154 -> 494,151 -> 494,154 -> 496,154 -> 496,151 -> 496,154
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
482,140 -> 482,141 -> 489,141 -> 489,140
509,32 -> 513,32
479,85 -> 479,87 -> 473,87 -> 473,94 -> 486,94 -> 486,87 -> 483,87 -> 483,85
506,106 -> 511,106
507,110 -> 512,110
495,161 -> 500,161
491,23 -> 491,15 -> 491,23 -> 493,23 -> 493,18 -> 493,23 -> 495,23 -> 495,15 -> 495,23 -> 497,23 -> 497,15 -> 497,23 -> 499,23 -> 499,18 -> 499,23 -> 501,23 -> 501,14 -> 501,23 -> 503,23 -> 503,21 -> 503,23 -> 505,23 -> 505,19 -> 505,23 -> 507,23 -> 507,15 -> 507,23
514,47 -> 514,41 -> 514,47 -> 516,47 -> 516,42 -> 516,47 -> 518,47 -> 518,42 -> 518,47 -> 520,47 -> 520,44 -> 520,47 -> 522,47 -> 522,44 -> 522,47 -> 524,47 -> 524,42 -> 524,47 -> 526,47 -> 526,38 -> 526,47 -> 528,47 -> 528,43 -> 528,47 -> 530,47 -> 530,44 -> 530,47`;

let logging = false;
let FLOOR = 0;
const EMPTY_SPACE = ' ';
const WALL = '█';
const SAND = 'o';

const log = (...m) => logging && console.log(...m);

const parseInput = (input, pt2) => {
    //console.log(input);
    let lines = input.split('\n');
    let result = {
        walls: [],
        min: { x: 99999, y: 0 },
        max: { x: -99999, y: 0 }
    };
    lines.forEach(l => {
        let nodes = l.split(' -> ');
        let line = [];
        nodes.forEach(n => {
            let r = n.split(',');
            let x = parseInt(r[0]);
            let y = parseInt(r[1]);
            line.push({ x, y });
            //console.log('looking at coord', x, y);
            if (x < result.min.x) result.min.x = x;
            if (x > result.max.x) result.max.x = x;
            if (y < result.min.y) result.min.y = y;
            if (y > result.max.y) result.max.y = y;

        });
        result.walls.push(line);
    });
    if (pt2) {
        result.max.y += 2;

        let h = result.max.y - result.min.y;

        result.min.x -= (Math.ceil(h));
        result.max.x += (Math.ceil(h));
        result.walls.push([{ x: result.min.x, y: result.max.y }, { x: result.max.x, y: result.max.y }]);
    }
    return result;
};

const generateMap = (input) => {
    // generate blank map
    let map = {};
    for (let y = input.min.y; y <= input.max.y; y++) {
        map[y] = {};
        for (let x = input.min.x; x <= input.max.x; x++) {
            map[y][x] = EMPTY_SPACE;
        }
    }


    input.walls.forEach(wall => {
        let prev = wall.shift();
        while (true) {
            if (wall.length == 0) break;
            let next = wall.shift();
            //console.log(prev, next);
            let h = next.x - prev.x;
            let v = next.y - prev.y;
            // horizontal wall
            if (h != 0) {
                if (h > 0) {
                    for (let p = prev.x; p <= next.x; p++)
                        map[next.y][p] = WALL;
                }
                else {
                    for (let p = prev.x; p >= next.x; p--)
                        map[next.y][p] = WALL;
                }

            }
            else if (v != 0) {
                if (v > 0) {
                    for (let p = prev.y; p <= next.y; p++)
                        map[p][prev.x] = WALL;
                }
                else {
                    for (let p = prev.y; p >= next.y; p--)
                        map[p][prev.x] = WALL;
                }
            }
            prev = next;
            //printMap(map);
        }
    });
    map[0][500] = '+';
    return map;
};


const printMap = map => {
    let msg = '';
    for (let y in map) {
        msg += EMPTY_SPACE;
        //console.log(Object.values(map[y]).toString().replaceAll(',', ''));
        for (let x in map[y]) {
            //console.log();
            msg += map[y][x];
        }
        msg += EMPTY_SPACE + '\n';
    }
    console.log(msg);
};

const getTileAt = (map, x, y) => {
    try {
        return map[y][x];
    }
    catch { return null; }
};

const dropSand = (map) => {
    let start = { x: 500, y: 0 };
    let pos = { ...start };
    let offMap = false;
    let a = true;
    while (a) {

        let nextTile = getTileAt(map, pos.x, pos.y + 1);
        log('next tile down is: \'', nextTile, '\'');
        if (nextTile == null) {
            offMap = true;
            break;
        }
        else if (nextTile == EMPTY_SPACE) {
            log('moving down 1');
            pos.y++;
            continue;
        }
        else {
            // Move left first
            nextTile = getTileAt(map, pos.x - 1, pos.y + 1);
            log('next tile left is: \'', nextTile, '\'');

            if (nextTile == null) {
                offMap = true;
                break;
            }
            else if (nextTile == EMPTY_SPACE) {
                pos.x--;
                pos.y++;
                continue;
            }

            // then try moving right

            nextTile = getTileAt(map, pos.x + 1, pos.y + 1);
            log('next tile right is: \'', nextTile, '\'');

            if (nextTile == null) {
                offMap = true;
                break;
            }
            else if (nextTile == EMPTY_SPACE) {
                pos.x++;
                pos.y++;
                continue;
            }
        }
        break;
    }
    if (!offMap) {
        map[pos.y][pos.x] = SAND;

        if (pos.x == start.x && pos.y == start.y) return false;

        return true;
    }
    else return false;

};


(() => {
    let m;
    exec(() => {
        let part2 = true;
        let input = parseInput(rawinput, part2);
        //console.log(input.min, input.max);
        let map = generateMap(input);
        printMap(map);
        let i = part2 ? 1 : 0;
        while (dropSand(map)) {
            i++;
            // console.clear();
            // printMap(map);
            // for (let n = 0; n < 50000000; n++);
        }
        console.clear();
        printMap(map);
        m = map;
        console.log('iterations:', i);
    });
    exec(() => {
        printMap(m);
    });
})();

